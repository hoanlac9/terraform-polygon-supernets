---
# Bootstrap edge

- name: Produce edge bootstrap script
  ansible.builtin.template:
    src: bootstrap.sh
    dest: "{{ edge_home_dir }}/init.sh"
    mode: 0700

- name: Get the number of non-validator nodes
  set_fact:
    num_non_validator_nodes: "{{ groups['non_validator'] |  length }}"
    BaseDN: "{{ hostvars[inventory_hostname].tags['BaseDN'] }}"
  when: hostvars[inventory_hostname].tags["Hostname"] == "validator-001"

- name: Print num_non_validator_nodes
  debug:
    msg: |
      num_non_validator_nodes: {{ num_non_validator_nodes }}
      BaseDN: {{ BaseDN }}
    
  when: hostvars[inventory_hostname].tags["Hostname"] == "validator-001"

- name: Format num_non_validator_nodes as three-digit number
  set_fact:
    formatted_num_non_validator_nodes: "{{ '%03d' | format(num_non_validator_nodes | int) }}"
  when: num_non_validator_nodes is defined

- name: Execute bootstrap on the first validator
  ansible.builtin.command: "{{ edge_home_dir }}/init.sh"
  vars:
    num_non_validator_nodes: "{{ formatted_num_non_validator_nodes }}"
  when: hostvars[inventory_hostname].tags["Hostname"] == "validator-001"

- name: Execute bootstrap for the non-validator
  ansible.builtin.shell: |
    cd /var/lib/bootstrap
    polygon-edge polybft-secrets --data-dir non-validator-{{ formatted_num_non_validator_nodes }}.{{ BaseDN }} --json --insecure > non-validator-{{ formatted_num_non_validator_nodes }}.{{ BaseDN }}.json
    tar -cvf {{ BaseDN }}.tar.gz *.json *.private
  loop: "{{ range(formatted_num_non_validator_nodes | int) | list }}"
  loop_control:
    loop_var: item
  when: hostvars[inventory_hostname].tags["Hostname"] == "validator-001"

- name: Fetch the bootstrap archive stored on the first validator
  ansible.builtin.fetch:
    src: /var/lib/bootstrap/{{ BaseDN }}.tar.gz
    dest: /tmp/{{ BaseDN }}.tar.gz
    flat: true
  when: hostvars[inventory_hostname].tags["Hostname"] == "validator-001"
